version: "3"
services:
  vpn:
    image: bubuntux/nordvpn:v1.0
#    dns:
#      - 1.1.1.1 # don't think it's necessary
#      - 8.8.8.8
#    network_mode: bridge # THIS SHOULDNT BE THERE. THEN I CANT DNS ROUTE???
    networks:
      - discovery
    cap_add:
      - NET_ADMIN               # Required
      - SYS_MODULE              # Required for TECHNOLOGY=NordLynx
    sysctls:
      - net.ipv4.conf.all.rp_filter=2
    devices:
      - /dev/net/tun            # Required
    environment:                # Review https://github.com/bubuntux/nordvpn#environment-variables
#      - USER=${NORDVPN_USER}     # Required
#      - PASS=${NORDVPN_PSW}
#      - CONNECT=Sweden
#      - CONNECT=United_States
#      - TECHNOLOGY=NordLynx
      - TECHNOLOGY=OpenVPN
      - CYBER_SEC=Enable
      - NETWORK=192.168.1.0/24
      - TZ=Europe/Copenhagen
      - DEBUG=on
    env_file:
      - .env
    ports:
      - "7503:7503" # qbittorrent webui
      - "8112:8112" # deluge webui
#    extra_hosts:  #not necessary now, but might be a fix sometime
#      - "w569ut7zbkiqf5b.xyz:104.28.28.105"
#      - "zwyr157wwiu6eior.com:104.17.188.107"
#      - "boi9osyg1uwtyafn.com:104.16.229.42"

  qbittorrent:
    image: linuxserver/qbittorrent
    network_mode: service:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Copenhagen
      - UMASK_SET=022
      - WEBUI_PORT=7503
    volumes:
      - /mnt/storage/config/torrent:/config
      - /mnt/storage/downloads:/downloads
    restart: unless-stopped
    depends_on:
      - vpn
    labels:
      # qbittorrent
      - traefik.enable=true
      - traefik.http.routers.qb.rule=Host(`qbittorrent.${DOMAINNAME}`)
      - traefik.frontend.rule=Host:qbittorrent.${DOMAINNAME}
      - traefik.http.routers.qb.entrypoints=web
      - traefik.http.services.qb.loadbalancer.server.port=7503

  deluge:
    image: linuxserver/deluge
    container_name: deluge
    network_mode: service:vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Copenhagen
      - UMASK_SET=022 #optional
      - DELUGE_LOGLEVEL=debug #optional
    volumes:
      - /mnt/storage/config/torrent:/config
      - /mnt/storage/downloads:/downloads
    restart: unless-stopped
    depends_on:
      - vpn
    labels:
      # deluge
      - traefik.enable=true
      - traefik.http.routers.deluge.rule=Host(`deluge.${DOMAINNAME}`)
      - traefik.frontend.rule=Host:deluge.${DOMAINNAME}
      - traefik.http.routers.deluge.entrypoints=web
      - traefik.http.services.deluge.loadbalancer.server.port=8112

  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget:latest
    restart: unless-stopped
    network_mode: service:vpn
    environment:
      - PUID=1000 # default user id, defined in .env
      - PGID=1000 # default group id, defined in .env
      - TZ=Europe/Copenhagen # timezone, defined in .env
    volumes:
      - /mnt/storage/downloads:/downloads # download folder
      - /mnt/storage/config/nzbget:/config # config files
        
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
#    network_mode: host
    networks:
      - discovery
    depends_on:                                                                              
      - qbittorrent 
    ports:
      - "7878:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Copenhagen
    volumes:
      - /mnt/storage/config/radarr:/config
      - /mnt/storage/downloads:/downloads
      - /mnt/storage/media/Movies:/movies
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAINNAME}`)
      - traefik.frontend.rule=Host:radarr.${DOMAINNAME}
#      - traefik.http.routers.radarr.entrypoints=websecure
#      - traefik.http.routers.radarr.tls.certresolver=myresolver

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      - discovery
#    network_mode: host
    depends_on:                                                                              
      - qbittorrent 
    ports:
      - "8989:8989"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Copenhagen
    volumes:
      - /mnt/storage/config/sonarr:/config
      - /mnt/storage/downloads:/downloads
      - /mnt/storage/media/TV Shows:/tv
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAINNAME}`)
      - traefik.frontend.rule=Host:sonarr.${DOMAINNAME}
#      - traefik.http.routers.sonarr.entrypoints=websecure
#      - traefik.http.routers.sonarr.tls.certresolver=myresolver
  
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    networks:
      - discovery
    environment:
        - PUID=1000
        - PGID=1000
        - TZ=Europe/Copenhagen
        - AUTO_UPDATE=true #optional
      #  - RUN_OPTS=#optional
    ports:
      - 9117:9117
    volumes:
        - /mnt/storage/config/jackett:/config
        - /mnt/storage/downloads:/downloads
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAINNAME}`)
      - traefik.frontend.rule=Host:jackett.${DOMAINNAME}
#      - traefik.http.routers.jackett.entrypoints=websecure
#      - traefik.http.routers.jackett.tls.certresolver=myresolver

  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr
    restart: unless-stopped
    networks:
      - discovery
    #network_mode: host
    environment:
      - PUID=1000 # default user id, defined in .env
      - PGID=1000 # default group id, defined in .env
      - TZ=Europe/Copenhagen # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - /mnt/storage/config/bazarr:/config # config files
      - /mnt/storage/media/Movies:/movies # movies folder
      - /mnt/storage/media/TV Shows:/tv # tv shows folder
    ports:
      - 6767:6767
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAINNAME}`)
      - traefik.frontend.rule=Host:bazarr.${DOMAINNAME}

  plex:
    container_name: plex
    image: linuxserver/plex:bionic #arm32v7-latest
    restart: unless-stopped
    #networks:
    #  - discovery
    network_mode: host
    ports:
      - 32400:32400
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    environment:
      - TZ=Europe/Copenhagen
      - VERSION=docker
      #- PLEX_CLAIM=claim-qPMWZ7JE5wHd63zwaX94
      - ADVERTISE_IP=http://plex.${DOMAINNAME}/
      #- ADVERTISE_IP=http://raspberrypi.local:32400
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/storage/config/plex:/config
      - /mnt/storage/transcode:/transcode
      - /mnt/storage/media/TV Shows:/data/TV Shows
      - /mnt/storage/media/Movies:/data/Movies
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex.rule=Host(`plex.${DOMAINNAME}`)
      - traefik.frontend.rule=Host:plex.${DOMAINNAME}
      - traefik.http.services.plex.loadbalancer.server.port=32400

networks:
  # Discovery is manually created to avoid forcing any order of docker-compose stack creation (`docker network create discovery`)
  # allows other compose files to be seen by proxy
  # Not required if you aren't using multiple docker-compose files...
  discovery:
    external: true